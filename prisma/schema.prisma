// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Users {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
  email    String @unique
  role     Role

  profile Profiles?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  ADMIN
  USER
}

// one to one retation users hasOne profiles
// one to many relation profiles hasMany posts
model Profiles {
  id     Int    @id @default(autoincrement())
  name   String @unique
  gender String
  age    Int
  UserId Int    @unique

  user  Users   @relation(fields: [UserId], references: [id])
  posts Posts[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// many to many relation posts has many tags / tags has many posts
model Posts {
  id          Int      @id @default(autoincrement())
  titlePost   String
  picturePost String?
  captionPost String
  ProfileId   Int
  author      Profiles @relation(fields: [ProfileId], references: [id])
  tags        Tags[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tags {
  id      Int    @id @default(autoincrement())
  tagName String @unique

  posts Posts[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
